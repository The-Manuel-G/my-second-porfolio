---
import { onCopyToClipboard, onSendEmail } from "../data/utils.js";

interface Props {
  email: string;
}

const { email } = Astro.props;
---

<div class="flex items-center">
  <div class="inlineblock">
    <input
      type="email"
      name="email"
      id="email"
      class="input email_contact elemento-zoom-sacudida"
      placeholder="Email"
      title="Invalid email"
      required
      data-type="email"
      value={email}
      readonly
    />
    <span class="contact-form-span none" data-span="error"
      >This field is mandatory</span
    >
  </div>
  <div class="inlineblock space-x-2">
    <button
      @click={() => onSendEmail(email)}
      type="button"
      class="button text-white bg-gradient-to-r from-blue-500 via-blue-600 to-blue-700 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-blue-300 dark:focus:ring-blue-800 shadow-lg shadow-blue-500/50 dark:shadow-lg dark:shadow-blue-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center me-2 mb-2 titulo__dark elemento-zoom-sacudida"
    >
      <img class="icon_copy" src="./img/send-2.svg" alt="send" />
    </button>
    <button
      @click={() => onCopyToClipboard(email)}
      class="button titulo__dark elemento-zoom-sacudida"
    >
      <img class="icon_copy" src="./img/copy.svg" alt="send" />
    </button>
  </div>
</div>

<style>

 
    .button {
      display: inline-block;
      border-radius: 20px;
      background-color: #0080ff;
      border: none;
      color: #FFFFFF;
      text-align: center;
      font-size: 28px;
      padding: 8px;
      width: 57px;
      height: 57px;
      transition: all 0.5s;
      cursor: pointer;
      margin: 5px;
      
    }
      @keyframes changeColor {
      0% {
        background-color: red;
      }
      50% {
        background-color: blue;
      }
      100% {
        background-color: red;
      }
    }
    
    
    @keyframes zoom {
      0%, 100% {
        transform: scale(1);
      }
      50% {
        transform: scale(1.5);
      }
    }
    
    @keyframes shake {
      0%, 100% {
        transform: translate(0, 0);
      }
      25% {
        transform: translate(-5px, -5px);
      }
      50% {
        transform: translate(5px, -5px);
      }
      75% {
        transform: translate(-5px, 5px);
      }
      100% {
        transform: translate(5px, 5px);
      }
    }
    
    @keyframes rotateLeftToRight {
      
      0% {
        transform: rotate(0deg, 0deg);
      }
      50% {
        transform: rotate(20deg, -20deg);
      }
      75% {
        transform: rotate(-20deg, 20deg);
    
      }
    }
    
    .elemento-zoom-sacudida {
      animation: zoom 1s forwards, shake 0.2s infinite;
      animation-duration: 25s; /* 1s de zoom + 5s de pausa + 0.5s de shake = 6.5s de duración total */
      animation-timing-function: ease-in-out; /* Hace que la transición de la pausa sea más suave */
      animation-iteration-count: infinite; /* Repite infinitamente */
    }
    
    
    .icon_copy{
        
        cursor: pointer;
        color: white;
        font-size: 3rem; 
     
      }
    
    
    
    .elemento-color {
      animation: changeColor 3s infinite;
    }
    
      @keyframes zoomInOut {
      0%, 100% {
        transform: scale(1);
      }
      50% {
        transform: scale(1.5);
      }
    }
    
    .elemento-zoom {
      animation: zoomInOut 2s infinite;
    }
    
      @keyframes bounce {
      0%, 20%, 50%, 80%, 100% {
        transform: translateY(0);
      }
      40% {
        transform: translateY(-30px);
      }
      60% {
        transform: translateY(-15px);
      }
    }
    
    .elemento-rebote {
      animation: bounce 4s infinite;
    }
    
    @keyframes shake {
      0%, 100% {
        transform: translateY(0);
      }
      10%, 30%, 50%, 70%, 90% {
        transform: translateY(-5px);
      }
      20%, 40%, 60%, 80% {
        transform: translateY(5px);
      }
    }
    
    .elemento-sacudida {
      animation: shake 2s infinite;
    }
    
    .inlineblock{
    display: inline-flex;
    align-items: center;
    justify-content: center;
    }
    
    
    .button, .icon_copy{
      vertical-align: middle;
    }
      .email_contact{
        border-radius: 10%;
        display: flex;
        font-size: 1.7rem;
        width: 100%;
        max-width: 27rem;
        margin-top: 20px;
        padding: 10px 4px;
        align-items: center;
        height: 6rem;
        backdrop-filter: blur(10px);
        -webkit-backdrop-filter: blur(10px);
        border-radius: 40px;
    
        
        font-weight: 660;
        cursor: none;
        gap: 1rem;
      }
      .post {
        background-color: black;
        width: 100%;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        padding: 2rem;
      }
      .post__container {
        display: flex;
        flex-direction: column-reverse;
        justify-content: center;
        align-items: center;
        gap: 3rem;
        width: 100%;
      }
      .post__titulo {
        display: flex;
        font-size: 3.5rem;
        margin: 0;
        gap: 1rem;
        padding-bottom: 2rem;
        color: var(--seccond-color);
        justify-content: center;
      }
    
      .post__titulo span {
        color: #01f2ff;
        filter: drop-shadow(0px 0px 4px rgb(0,0,0));
        text-shadow: -2px 3px 5px black;
      }
      .post__titulo span:hover {
        color: var(--blue);
      }
      .img__post {
        width: 600px;
        height:530px; ;
        object-fit: cover;
      }
    
      @media screen and (min-width: 768px) {
        .post__container {
          flex-direction: row;
          justify-content: space-evenly;
          width: 80%;
        }
        .container__terminal {
          width: 65rem;
        }
        .post__titulo {
          display: flex;
          font-size: 4rem;
          margin: 0;
          gap: 2rem;
          padding-bottom: 2rem;
          color: var(--seccond-color);
        }
      }
    </style>
    